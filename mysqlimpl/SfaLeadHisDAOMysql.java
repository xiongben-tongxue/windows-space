package com.ztesoft.zsmart.bss.sfa.lead.dao.mysqlimpl;

/**
 * <p>Title:ZSMART </p>
 *
 * <p>Description: SfaLeadHisDAO </p>
 *
 * <p>Copyright: Copyright (c) 2011</p>
 *
 * <p>Company:ztesoft </p>
 *
 * <p>Created Date:2012/7/19 9:59:47 </p>
 *
 * @author:   Auto Generated by CodeSmith 3.0 
 * @version R13
 */

import com.ztesoft.zsmart.bss.sfa.lead.dao.ISfaLeadHisDAO;
import com.ztesoft.zsmart.bss.sfa.lead.model.SfaLeadHisDto;
import com.ztesoft.zsmart.core.exception.BaseAppException;
import com.ztesoft.zsmart.core.jdbc.BaseDAO;
import com.ztesoft.zsmart.core.jdbc.ParamArray;
import com.ztesoft.zsmart.core.jdbc.rowset.RowSetMapper;
import com.ztesoft.zsmart.core.jdbc.rowset.RowSetOperator;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * 
 * <Description> <br> 
 *  
 * @author <br>
 * @version V8<br>
 * @taskId <br>
 * @CreateDate 2012-9-4 <br>
 * @since V8<br>
 * @see com.ztesoft.zsmart.bss.sfa.lead.dao.abstractimpl <br>
 */
public class SfaLeadHisDAOMysql extends BaseDAO implements ISfaLeadHisDAO {
    /**
     * 构造函数
     */
    public SfaLeadHisDAOMysql() {
    }

    /**
     * 
     * Description: <br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param oppProcessId Long
     * @return SfaLeadHisDto
     * @throws BaseAppException <br>
     */
    public SfaLeadHisDto qryLeadEditHis(Long oppProcessId) throws BaseAppException {
        String sqlStr = "SELECT "
            + " LEAD_ID,SEQ,LEAD_PROCESS_ID,LEAD_STATE,TITLE_ID,LEAD_RATING_ID,SOURCE_ID,INDUSTRY_ID,ADDRESS_ID,DISPATCH_ORDER_ID,"
            + "CV_CONTACT_MAN_ID,CV_OPP_ID,CV_CUST_ID,FIRST_NAME,LAST_NAME,ADDRESS,ZIP_CODE,PHONE,FAX,EMAIL,WEB_SITE,FACEBOOK,TWITTER,INSTAGRAM,"
            + "COMMENTS,EX_ATTR,SP_ID,CUST_NAME,SEX,AREA_ID,LEAD_TYPE,CMP_ID \r\n"
            + "FROM SFA_LEAD_HIS T \t\r " + "WHERE T.LEAD_PROCESS_ID = ?  \t\r" + "ORDER BY SEQ ";
        ParamArray pa = new ParamArray();
        pa.set("", oppProcessId);

        return query(sqlStr, pa, null, new RowSetMapper<SfaLeadHisDto>() {
            public SfaLeadHisDto mapRows(RowSetOperator op, ResultSet rs, int colNum, Object para) throws SQLException,
                BaseAppException {
                SfaLeadHisDto dto = null;
                if (rs.next()) {
                    int dbloop = 1;
                    dto = new SfaLeadHisDto();
                    dto.setLeadId(op.getLong(rs, dbloop++));
                    dto.setSeq(op.getLong(rs, dbloop++));
                    dto.setLeadProcessId(op.getLong(rs, dbloop++));
                    dto.setLeadState(op.getString(rs, dbloop++));
                    dto.setTitleId(op.getLong(rs, dbloop++));
                    dto.setLeadRatingId(op.getLong(rs, dbloop++));
                    dto.setSourceId(op.getLong(rs, dbloop++));
                    dto.setIndustryId(op.getLong(rs, dbloop++));
                    dto.setAddressId(op.getLong(rs, dbloop++));
                    dto.setDispatchOrderId(op.getLong(rs, dbloop++));
                    dto.setCvContactManId(op.getLong(rs, dbloop++));
                    dto.setCvOppId(op.getLong(rs, dbloop++));
                    dto.setCvCustId(op.getLong(rs, dbloop++));
                    dto.setFirstName(op.getString(rs, dbloop++));
                    dto.setLastName(op.getString(rs, dbloop++));
                    dto.setAddress(op.getString(rs, dbloop++));
                    dto.setZipCode(op.getString(rs, dbloop++));
                    dto.setPhone(op.getString(rs, dbloop++));
                    dto.setFax(op.getString(rs, dbloop++));
                    dto.setEmail(op.getString(rs, dbloop++));
                    dto.setWebSite(op.getString(rs, dbloop++));
                    dto.setFacebook(op.getString(rs, dbloop++));
                    dto.setTwitter(op.getString(rs, dbloop++));
                    dto.setInstagram(op.getString(rs, dbloop++));
                    dto.setComments(op.getString(rs, dbloop++));
                    dto.setExAttr(op.getString(rs, dbloop++));
                    dto.setSpId(op.getLong(rs, dbloop++));
                    dto.setCustName(op.getString(rs, dbloop++));

                    dto.setSex(op.getString(rs, dbloop++));
                    dto.setAreaId(op.getLong(rs, dbloop++));
                    dto.setLeadType(op.getLong(rs, dbloop++));
                    dto.setCmpId(op.getLong(rs, dbloop++));
                }
                return dto;
            }
        });
    }

    /**
     * 
     * Description: <br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param oppId Long
     * @param seq Long
     * @return SfaLeadHisDto
     * @throws BaseAppException <br>
     */
    public SfaLeadHisDto qryLeadNewEditHis(Long oppId, Long seq) throws BaseAppException {

        String sqlStr = "SELECT "
            + " LEAD_ID,SEQ,LEAD_PROCESS_ID,LEAD_STATE,TITLE_ID,LEAD_RATING_ID,SOURCE_ID,INDUSTRY_ID,ADDRESS_ID,DISPATCH_ORDER_ID,"
            + "CV_CONTACT_MAN_ID,CV_OPP_ID,CV_CUST_ID,FIRST_NAME,LAST_NAME,ADDRESS,ZIP_CODE,PHONE,FAX,EMAIL,WEB_SITE,COMMENTS,"
            + "EX_ATTR,SP_ID,CUST_NAME,SEX,AREA_ID,LEAD_TYPE,CMP_ID \r\n"
            + " FROM SFA_LEAD_HIS T \t\r " + " WHERE T.LEAD_ID = ?  \t\r" + " AND T.SEQ = ?" + " ORDER BY SEQ ";
        ParamArray pa = new ParamArray();
        pa.set("", oppId);
        pa.set("", seq + 1);

        return query(sqlStr, pa, null, new RowSetMapper<SfaLeadHisDto>() {
            public SfaLeadHisDto mapRows(RowSetOperator op, ResultSet rs, int colNum, Object para) throws SQLException,
                BaseAppException {
                SfaLeadHisDto dto = null;
                if (rs.next()) {
                    int dbloop = 1;
                    dto = new SfaLeadHisDto();
                    dto.setLeadId(op.getLong(rs, dbloop++));
                    dto.setSeq(op.getLong(rs, dbloop++));
                    dto.setLeadProcessId(op.getLong(rs, dbloop++));
                    dto.setLeadState(op.getString(rs, dbloop++));
                    dto.setTitleId(op.getLong(rs, dbloop++));
                    dto.setLeadRatingId(op.getLong(rs, dbloop++));
                    dto.setSourceId(op.getLong(rs, dbloop++));
                    dto.setIndustryId(op.getLong(rs, dbloop++));
                    dto.setAddressId(op.getLong(rs, dbloop++));
                    dto.setDispatchOrderId(op.getLong(rs, dbloop++));
                    dto.setCvContactManId(op.getLong(rs, dbloop++));
                    dto.setCvOppId(op.getLong(rs, dbloop++));
                    dto.setCvCustId(op.getLong(rs, dbloop++));
                    dto.setFirstName(op.getString(rs, dbloop++));
                    dto.setLastName(op.getString(rs, dbloop++));
                    dto.setAddress(op.getString(rs, dbloop++));
                    dto.setZipCode(op.getString(rs, dbloop++));
                    dto.setPhone(op.getString(rs, dbloop++));
                    dto.setFax(op.getString(rs, dbloop++));
                    dto.setEmail(op.getString(rs, dbloop++));
                    dto.setWebSite(op.getString(rs, dbloop++));
                    dto.setComments(op.getString(rs, dbloop++));
                    dto.setExAttr(op.getString(rs, dbloop++));
                    dto.setSpId(op.getLong(rs, dbloop++));
                    dto.setCustName(op.getString(rs, dbloop++));
                    
                    dto.setSex(op.getString(rs, dbloop++));
                    dto.setAreaId(op.getLong(rs, dbloop++));
                    dto.setLeadType(op.getLong(rs, dbloop++));
                    dto.setCmpId(op.getLong(rs, dbloop++));
                }
                return dto;
            }
        });
    }

}
