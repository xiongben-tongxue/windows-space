package com.ztesoft.zsmart.bss.sfa.lead.dao.mysqlimpl;

/**
 * <p>Title:ZSMART </p>
 *
 * <p>Description: SfaLeadStateDAO </p>
 *
 * <p>Copyright: Copyright (c) 2011</p>
 *
 * <p>Company:ztesoft </p>
 *
 * <p>Created Date:2012/7/19 11:01:20 </p>
 *
 * @author:   Auto Generated by CodeSmith 3.0 
 * @version R13
 */

import com.ztesoft.zsmart.bss.sfa.lead.dao.ISfaLeadStateDAO;
import com.ztesoft.zsmart.bss.sfa.lead.model.SfaLeadStateDto;
import com.ztesoft.zsmart.core.exception.BaseAppException;
import com.ztesoft.zsmart.core.jdbc.BaseDAO;
import com.ztesoft.zsmart.core.jdbc.ParamArray;
import com.ztesoft.zsmart.core.jdbc.rowset.RowSetMapper;
import com.ztesoft.zsmart.core.jdbc.rowset.RowSetOperator;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * 
 * <Description> <br> 
 *  
 * @author <br>
 * @version V8<br>
 * @taskId <br>
 * @CreateDate 2012-9-4 <br>
 * @since V8<br>
 * @see com.ztesoft.zsmart.bss.sfa.lead.dao.abstractimpl <br>
 */
public class SfaLeadStateDAOMysql extends BaseDAO implements ISfaLeadStateDAO {
    /**
     * 构造函数
     */
    public SfaLeadStateDAOMysql() {
    }

    /**
     * 
     * Description:增加 <br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param dto SfaLeadStateDto
     * @return SfaLeadStateDto
     * @throws BaseAppException <br>
     */
    public SfaLeadStateDto insertSfaLeadState(SfaLeadStateDto dto) throws BaseAppException {
        String sqlStr = "INSERT INTO \r\n" + " SFA_LEAD_STATE(LEAD_STATE,LEAD_STATE_NAME,IS_CLOSE,COMMENTS) \r\n"
            + " VALUES(?,?,?,?)";

        ParamArray pa = new ParamArray();

        pa.set("", dto.getLeadState());
        pa.set("", dto.getLeadStateName());
        pa.set("", dto.getIsClose());
        pa.set("", dto.getComments());

        executeUpdate(sqlStr, pa);
        return dto;
    }

    /**
     * 
     * Description: 修改<br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param dto SfaLeadStateDto
     * @return int
     * @throws BaseAppException <br>
     */
    public int updateSfaLeadState(SfaLeadStateDto dto) throws BaseAppException {
        String sqlStr = "UPDATE SFA_LEAD_STATE\r\n" + " SET   LEAD_STATE_NAME=?,IS_CLOSE=?,COMMENTS=? \r\n"
            + " WHERE LEAD_STATE=?";

        ParamArray pa = new ParamArray();

        pa.set("", dto.getLeadStateName());
        pa.set("", dto.getIsClose());
        pa.set("", dto.getComments());
        pa.set("", dto.getLeadState());

        return executeUpdate(sqlStr, pa);
    }

    /**
     * 
     * Description:删除 <br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param leadState String
     * @return int
     * @throws BaseAppException <br>
     */
    public int deleteSfaLeadState(String leadState) throws BaseAppException {
        String sqlStr = "DELETE SFA_LEAD_STATE\r\n" + " WHERE LEAD_STATE=?";

        ParamArray pa = new ParamArray();

        pa.set("", leadState);

        return executeUpdate(sqlStr, pa);
    }

    /**
     * 
     * Description: 查询<br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param leadState String
     * @return SfaLeadStateDto
     * @throws BaseAppException <br>
     */
    public SfaLeadStateDto selectSfaLeadState(String leadState) throws BaseAppException {
        String sqlStr = "SELECT \r\n" + " LEAD_STATE,LEAD_STATE_NAME,IS_CLOSE,COMMENTS \r\n"
            + " FROM  SFA_LEAD_STATE \r\n" + " WHERE LEAD_STATE=?";

        ParamArray pa = new ParamArray();
        pa.set("", leadState);

        return query(sqlStr, pa, null, new RowSetMapper<SfaLeadStateDto>() {
            public SfaLeadStateDto mapRows(RowSetOperator op, ResultSet rs, int colNum, Object para)
                throws SQLException, BaseAppException {
                SfaLeadStateDto dto = null;
                if (rs.next()) {
                    int dbloop = 1;
                    dto = new SfaLeadStateDto();
                    dto.setLeadState(op.getString(rs, dbloop++));
                    dto.setLeadStateName(op.getString(rs, dbloop++));
                    dto.setIsClose(op.getString(rs, dbloop++));
                    dto.setComments(op.getString(rs, dbloop++));
                }
                return dto;
            }
        });
    }

}
