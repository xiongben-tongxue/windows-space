package com.ztesoft.zsmart.bss.sfa.lead.dao.mysqlimpl;

/**
 * <p>Title:ZSMART </p>
 *
 * <p>Description: SfaLeadProcessDAO </p>
 *
 * <p>Copyright: Copyright (c) 2011</p>
 *
 * <p>Company:ztesoft </p>
 *
 * <p>Created Date:2012/7/19 9:31:02 </p>
 *
 * @author:   Auto Generated by CodeSmith 3.0 
 * @version R13
 */

import com.ztesoft.zsmart.bss.sfa.lead.dao.ISfaLeadProcessDAO;
import com.ztesoft.zsmart.bss.sfa.lead.model.SfaLeadProcessDto;
import com.ztesoft.zsmart.core.exception.BaseAppException;
import com.ztesoft.zsmart.core.jdbc.BaseDAO;
import com.ztesoft.zsmart.core.jdbc.ParamArray;
import com.ztesoft.zsmart.core.jdbc.rowset.RowSetMapper;
import com.ztesoft.zsmart.core.jdbc.rowset.RowSetOperator;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * 
 * <Description> <br> 
 *  
 * @author <br>
 * @version V8<br>
 * @taskId <br>
 * @CreateDate 2012-9-4 <br>
 * @since V8<br>
 * @see com.ztesoft.zsmart.bss.sfa.lead.dao.abstractimpl <br>
 */
public class SfaLeadProcessDAOMysql extends BaseDAO implements ISfaLeadProcessDAO {
    
    /**
     * 构造函数
     */
    public SfaLeadProcessDAOMysql() {
    }

    /**
     * 
     * Description: 增加<br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param dto SfaLeadProcessDto
     * @return SfaLeadProcessDto
     * @throws BaseAppException <br>
     */
    public SfaLeadProcessDto insertSfaLeadProcess(SfaLeadProcessDto dto) throws BaseAppException {
        String sqlStr = "INSERT INTO \r\n"
            + " SFA_LEAD_PROCESS(LEAD_PROCESS_ID,LEAD_ID,ACTION_ID,WORK_ORDER_ID,SRC_PARTY_TYPE,SRC_PARTY_CODE,TITLE,COMMENTS,"
            + "TGT_PARTY_TYPE,TGT_PARTY_CODE,CREATED_PARTY_TYPE,CREATED_PARTY_CODE,CREATED_DATE,SP_ID) \r\n"
            + " VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

        ParamArray pa = new ParamArray();

        pa.set("", dto.getLeadProcessId());
        pa.set("", dto.getLeadId());
        pa.set("", dto.getActionId());
        pa.set("", dto.getWorkOrderId());
        pa.set("", dto.getSrcPartyType());
        pa.set("", dto.getSrcPartyCode());
        pa.set("", dto.getTitle());
        pa.set("", dto.getComments());
        pa.set("", dto.getTgtPartyType());
        pa.set("", dto.getTgtPartyCode());
        pa.set("", dto.getCreatedPartyType());
        pa.set("", dto.getCreatedPartyCode());
        pa.set("", dto.getCreatedDate());
        pa.set("", dto.getSpId());

        executeUpdate(sqlStr, pa);
        return dto;
    }

    /**
     * 
     * Description:修改 <br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param dto SfaLeadProcessDto
     * @return int
     * @throws BaseAppException <br>
     */
    public int updateSfaLeadProcess(SfaLeadProcessDto dto) throws BaseAppException {
        String sqlStr = "UPDATE SFA_LEAD_PROCESS\r\n"
            + " SET   LEAD_ID=?,ACTION_ID=?,WORK_ORDER_ID=?,SRC_PARTY_TYPE=?,SRC_PARTY_CODE=?,TITLE=?,COMMENTS=?,TGT_PARTY_TYPE=?,"
            + "TGT_PARTY_CODE=?,CREATED_PARTY_TYPE=?,CREATED_PARTY_CODE=?,CREATED_DATE=?,SP_ID=? \r\n"
            + " WHERE LEAD_PROCESS_ID=?";

        ParamArray pa = new ParamArray();

        pa.set("", dto.getLeadId());
        pa.set("", dto.getActionId());
        pa.set("", dto.getWorkOrderId());
        pa.set("", dto.getSrcPartyType());
        pa.set("", dto.getSrcPartyCode());
        pa.set("", dto.getTitle());
        pa.set("", dto.getComments());
        pa.set("", dto.getTgtPartyType());
        pa.set("", dto.getTgtPartyCode());
        pa.set("", dto.getCreatedPartyType());
        pa.set("", dto.getCreatedPartyCode());
        pa.set("", dto.getCreatedDate());
        pa.set("", dto.getSpId());
        pa.set("", dto.getLeadProcessId());

        return executeUpdate(sqlStr, pa);
    }

    /**
     * 
     * Description: 删除<br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param leadProcessId Long
     * @return int
     * @throws BaseAppException <br>
     */
    public int deleteSfaLeadProcess(Long leadProcessId) throws BaseAppException {
        String sqlStr = "DELETE SFA_LEAD_PROCESS\r\n" + " WHERE LEAD_PROCESS_ID=?";

        ParamArray pa = new ParamArray();

        pa.set("", leadProcessId);

        return executeUpdate(sqlStr, pa);
    }

    /**
     * 
     * Description:查询 <br> 
     *  
     * @author <br>
     * @taskId <br>
     * @param leadProcessId Long
     * @return SfaLeadProcessDto
     * @throws BaseAppException <br>
     */
    public SfaLeadProcessDto selectSfaLeadProcess(Long leadProcessId) throws BaseAppException {
        String sqlStr = "SELECT \r\n"
            + " LEAD_PROCESS_ID,LEAD_ID,ACTION_ID,WORK_ORDER_ID,SRC_PARTY_TYPE,SRC_PARTY_CODE,TITLE,COMMENTS,TGT_PARTY_TYPE,"
            + "TGT_PARTY_CODE,CREATED_PARTY_TYPE,CREATED_PARTY_CODE,CREATED_DATE,SP_ID \r\n"
            + " FROM  SFA_LEAD_PROCESS \r\n" + " WHERE LEAD_PROCESS_ID=?";

        ParamArray pa = new ParamArray();
        pa.set("", leadProcessId);

        return query(sqlStr, pa, null, new RowSetMapper<SfaLeadProcessDto>() {
            public SfaLeadProcessDto mapRows(RowSetOperator op, ResultSet rs, int colNum, Object para)
                throws SQLException, BaseAppException {
                SfaLeadProcessDto dto = null;
                if (rs.next()) {
                    int dbloop = 1;
                    dto = new SfaLeadProcessDto();
                    dto.setLeadProcessId(op.getLong(rs, dbloop++));
                    dto.setLeadId(op.getLong(rs, dbloop++));
                    dto.setActionId(op.getLong(rs, dbloop++));
                    dto.setWorkOrderId(op.getLong(rs, dbloop++));
                    dto.setSrcPartyType(op.getString(rs, dbloop++));
                    dto.setSrcPartyCode(op.getString(rs, dbloop++));
                    dto.setTitle(op.getString(rs, dbloop++));
                    dto.setComments(op.getString(rs, dbloop++));
                    dto.setTgtPartyType(op.getString(rs, dbloop++));
                    dto.setTgtPartyCode(op.getString(rs, dbloop++));
                    dto.setCreatedPartyType(op.getString(rs, dbloop++));
                    dto.setCreatedPartyCode(op.getString(rs, dbloop++));
                    dto.setCreatedDate(op.getDate(rs, dbloop++));
                    dto.setSpId(op.getLong(rs, dbloop++));
                }
                return dto;
            }
        });
    }

}
